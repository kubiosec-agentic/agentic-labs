#!/usr/bin/env python3
"""
Test script to compare v1 and v2 search functionality in Mem0
Generated by Copilot
"""

import warnings
warnings.filterwarnings("ignore", category=DeprecationWarning)

from mem0 import MemoryClient

# Initialize client
mem0 = MemoryClient()

# First, let's add a test memory
user_id = "test-v2-user"

# Add some test data
print("Adding test memory...")
result = mem0.add([{"role": "user", "content": "I love pizza and hate broccoli"}], user_id=user_id, version="v2")
print(f"Added: {result}")

# Test v1 search
print("\n=== Testing v1 search ===")
try:
    result_v1 = mem0.search("food preferences", version="v1", user_id=user_id)
    print(f"v1 result: {result_v1}")
except Exception as e:
    print(f"v1 error: {e}")

# Test v2 search  
print("\n=== Testing v2 search ===")
try:
    result_v2 = mem0.search("food preferences", version="v2", user_id=user_id)
    print(f"v2 result: {result_v2}")
except Exception as e:
    print(f"v2 error: {e}")

# Compare the structure
print("\n=== Comparing result structures ===")
print(f"v1 type: {type(result_v1) if 'result_v1' in locals() else 'N/A'}")
print(f"v2 type: {type(result_v2) if 'result_v2' in locals() else 'N/A'}")

# Clean up
print("\n=== Cleaning up ===")
all_memories = mem0.get_all(user_id=user_id, version="v2")
for memory in all_memories:
    if isinstance(memory, dict) and 'id' in memory:
        mem0.delete(memory['id'], user_id=user_id)
        print(f"Deleted memory: {memory['id']}")
