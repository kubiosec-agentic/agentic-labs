#!/usr/bin/env python3
"""
Test script to verify v2 search with proper filters
Generated by Copilot
"""

import warnings
warnings.filterwarnings("ignore", category=DeprecationWarning)

from mem0 import MemoryClient

# Initialize client
mem0 = MemoryClient()

# Test user
user_id = "test-v2-filters"

print("=== Testing v2 API with proper filters ===")

# Clean up first (using v1 for cleanup)
try:
    all_memories = mem0.get_all(user_id=user_id, version="v1")
    for memory in all_memories:
        if isinstance(memory, dict) and 'id' in memory:
            mem0.delete(memory['id'], user_id=user_id)
            print(f"Cleaned up: {memory['id']}")
except Exception as e:
    print(f"Cleanup note: {e}")

# Add test memory using v2
print("\n1. Adding test memory with v2...")
result = mem0.add([{"role": "user", "content": "I love hiking and outdoor activities"}], user_id=user_id, version="v2")
print(f"Added: {result}")

# Test v2 search with filters
print("\n2. Testing v2 search with filters...")
try:
    result_v2 = mem0.search("hiking", version="v2", filters={"user_id": user_id})
    print(f"v2 search result: {result_v2}")
    print(f"Result type: {type(result_v2)}")
    if isinstance(result_v2, dict) and 'results' in result_v2:
        print(f"Number of results: {len(result_v2['results'])}")
except Exception as e:
    print(f"v2 search error: {e}")

# Test v2 get_all with filters
print("\n3. Testing v2 get_all with filters...")
try:
    result_get_all = mem0.get_all(version="v2", filters={"user_id": user_id})
    print(f"v2 get_all result: {result_get_all}")
    print(f"Result type: {type(result_get_all)}")
except Exception as e:
    print(f"v2 get_all error: {e}")

# Compare with v1 for reference
print("\n4. Comparing with v1 for reference...")
try:
    result_v1_search = mem0.search("hiking", version="v1", user_id=user_id)
    print(f"v1 search result: {result_v1_search}")
    
    result_v1_get_all = mem0.get_all(user_id=user_id, version="v1")
    print(f"v1 get_all result: {result_v1_get_all}")
except Exception as e:
    print(f"v1 comparison error: {e}")

print("\n=== Test complete ===")
